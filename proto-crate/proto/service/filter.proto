syntax = "proto3";

package api.im.service.filter;

import "common/message.proto";
import "common/error.proto";

option go_package = "github.com/flare/api/im/service/filter;filter";
option java_multiple_files = true;
option java_package = "api.im.service.filter";

// 消息过滤服务
service MessageFilter {
    // 过滤消息
    rpc FilterMessage (FilterMessageRequest) returns (FilterMessageResponse);
    // 批量过滤消息
    rpc BatchFilterMessage (BatchFilterMessageRequest) returns (BatchFilterMessageResponse);
    // 添加过滤规则
    rpc AddFilterRule (AddFilterRuleRequest) returns (AddFilterRuleResponse);
    // 更新过滤规则
    rpc UpdateFilterRule (UpdateFilterRuleRequest) returns (UpdateFilterRuleResponse);
    // 删除过滤规则
    rpc DeleteFilterRule (DeleteFilterRuleRequest) returns (DeleteFilterRuleResponse);
    // 获取过滤规则列表
    rpc GetFilterRules (GetFilterRulesRequest) returns (GetFilterRulesResponse);
    // 检查敏感词
    rpc CheckSensitiveWords (CheckSensitiveWordsRequest) returns (CheckSensitiveWordsResponse);
}

// 过滤规则信息
message FilterRuleInfo {
    // 规则ID
    string rule_id = 1;
    // 规则名称
    string name = 2;
    // 规则类型
    FilterRuleType type = 3;
    // 规则内容
    string content = 4;
    // 规则动作
    FilterAction action = 5;
    // 规则优先级
    int32 priority = 6;
    // 规则状态
    FilterRuleStatus status = 7;
    // 创建时间
    int64 create_time = 8;
    // 更新时间
    int64 update_time = 9;
    // 规则配置
    map<string, string> config = 10;
}

// 过滤规则类型
enum FilterRuleType {
    // 关键词
    KEYWORD = 0;
    // 正则表达式
    REGEX = 1;
    // 图片识别
    IMAGE = 2;
    // 音频识别
    AUDIO = 3;
    // 视频识别
    VIDEO = 4;
    // 自定义规则
    CUSTOM = 5;
}

// 过滤动作
enum FilterAction {
    // 放行
    PASS = 0;
    // 拦截
    BLOCK = 1;
    // 替换
    REPLACE = 2;
    // 审核
    REVIEW = 3;
}

// 过滤规则状态
enum FilterRuleStatus {
    // 启用
    ENABLED = 0;
    // 禁用
    DISABLED = 1;
    // 过期
    EXPIRED = 2;
}

// 过滤消息请求
message FilterMessageRequest {
    // 消息数据
    api.im.common.MessageData message = 1;
    // 过滤选项
    FilterOptions options = 2;
}

// 过滤消息响应
message FilterMessageResponse {
    // 过滤结果
    FilterResult result = 1;
    // 错误信息
    api.im.common.Error error = 2;
}

// 批量过滤消息请求
message BatchFilterMessageRequest {
    // 消息列表
    repeated api.im.common.MessageData messages = 1;
    // 过滤选项
    FilterOptions options = 2;
}

// 批量过滤消息响应
message BatchFilterMessageResponse {
    // 过滤结果列表
    map<string, FilterResult> results = 1;
    // 错误信息
    api.im.common.Error error = 2;
}

// 过滤选项
message FilterOptions {
    // 是否检查文本
    bool check_text = 1;
    // 是否检查图片
    bool check_image = 2;
    // 是否检查音频
    bool check_audio = 3;
    // 是否检查视频
    bool check_video = 4;
    // 自定义选项
    map<string, string> custom_options = 5;
}

// 过滤结果
message FilterResult {
    // 是否通过
    bool passed = 1;
    // 命中的规则
    repeated FilterRuleInfo hit_rules = 2;
    // 替换后的内容
    bytes replaced_content = 3;
    // 详细信息
    map<string, string> details = 4;
}

// 添加过滤规则请求
message AddFilterRuleRequest {
    // 规则名称
    string name = 1;
    // 规则类型
    FilterRuleType type = 2;
    // 规则内容
    string content = 3;
    // 规则动作
    FilterAction action = 4;
    // 规则优先级
    int32 priority = 5;
    // 规则配置
    map<string, string> config = 6;
}

// 添加过滤规则响应
message AddFilterRuleResponse {
    // 规则信息
    FilterRuleInfo rule = 1;
    // 错误信息
    api.im.common.Error error = 2;
}

// 更新过滤规则请求
message UpdateFilterRuleRequest {
    // 规则ID
    string rule_id = 1;
    // 更新字段
    map<string, string> updates = 2;
}

// 更新过滤规则响应
message UpdateFilterRuleResponse {
    // 规则信息
    FilterRuleInfo rule = 1;
    // 错误信息
    api.im.common.Error error = 2;
}

// 删除过滤规则请求
message DeleteFilterRuleRequest {
    // 规则ID
    string rule_id = 1;
}

// 删除过滤规则响应
message DeleteFilterRuleResponse {
    // 是否成功
    bool success = 1;
    // 错误信息
    api.im.common.Error error = 2;
}

// 获取过滤规则列表请求
message GetFilterRulesRequest {
    // 规则类型
    FilterRuleType type = 1;
    // 规则状态
    FilterRuleStatus status = 2;
    // 分页大小
    int32 page_size = 3;
    // 分页标记
    string page_token = 4;
}

// 获取过滤规则列表响应
message GetFilterRulesResponse {
    // 规则列表
    repeated FilterRuleInfo rules = 1;
    // 下一页标记
    string next_page_token = 2;
    // 错误信息
    api.im.common.Error error = 3;
}

// 检查敏感词请求
message CheckSensitiveWordsRequest {
    // 待检查文本
    string text = 1;
    // 检查选项
    map<string, string> options = 2;
}

// 检查敏感词响应
message CheckSensitiveWordsResponse {
    // 是否包含敏感词
    bool contains_sensitive = 1;
    // 敏感词列表
    repeated SensitiveWordInfo sensitive_words = 2;
    // 错误信息
    api.im.common.Error error = 3;
}

// 敏感词信息
message SensitiveWordInfo {
    // 敏感词
    string word = 1;
    // 位置
    repeated Position positions = 2;
    // 类别
    string category = 3;
    // 风险等级
    RiskLevel risk_level = 4;
}

// 位置信息
message Position {
    // 开始位置
    int32 start = 1;
    // 结束位置
    int32 end = 2;
}

// 风险等级
enum RiskLevel {
    // 低风险
    LOW = 0;
    // 中风险
    MEDIUM = 1;
    // 高风险
    HIGH = 2;
} 